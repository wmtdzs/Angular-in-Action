scope属性还可以设置成一个JSON对象，若是对象，那么，父作用域与子作用域是完全独立的，
不存在任何关联。
当指令中的scope属性值是JSON对象时，若子作用域需要添加属性，必须先添加指令中的link
函数，然后，通过函数中的scope对象进行添加；若在子作用域中，要绑定或调用父作用域中
的属性和方法，则需要在scope属性对应的JSON对象值中添加绑定策略。
严格来说，在JSON对象中添加的有3种绑定策略，分别是“@绑定”、“=绑定”、“&绑定”，
它们绑定的符号不同，执行的功能也有区别。

1. @绑定：
   “@绑定”的功能与将scope属性设置为true时有许多相同的地方。表现为：在子作用域
   重置属性内容之前，父作用域的属性内容修改了，子作用域对应的属性内容也会随之修改，
   并且子作用域的属性内容变化时，不会影响到父作用域中对应的属性内容，这是两者的
   相同之处。
   唯一不同在于，“@绑定”的功能在子作用域中重置属性内容之后，再返回修改父作用域中
   对应属性的内容时，子作用域对应的属性内容同样还会随之改变。若将scope属性设为true，
   这种子作用域随父作用域变化而变化的情况只发生在子作用域重置属性内容之前，重置之后
   则不会随之变化。

2. =绑定：
   “=绑定”的功能是创建一个父与子作用域可以同时共享的属性，即当父作用域修改了该属性，
   子作用域也随之变化；子作用域重置时，父作用域也会随之变化，两个作用域之间的属性内容
   是互通的，是完全共享和同步的。

3. &绑定
   “&绑定”的功能是可以在对立的子作用域中直接调用父作用域的方法。在调用时可以向函数
   传递实参，这种功能的好处在于，避免重复编码，只需进行简单的绑定设置，就可以使指令
   执行后，轻松调用元素控制器中的方法。