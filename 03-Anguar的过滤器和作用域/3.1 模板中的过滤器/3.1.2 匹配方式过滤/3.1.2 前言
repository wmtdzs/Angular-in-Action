匹配方式是将字符参数与列表中的各个成员属性值相匹配，如果包含该自负参数值，
则显示该条列表记录。匹配时，不区分大小写，常见匹配方式有如下几种：
* 通过filter过滤器直接匹配包含字符串参数的数据
  这种方式只需要在调用filter过滤器时，添加一个需要匹配的字符参数
  {{ 数据 | filter: '匹配字符' }}
  上述格式中，匹配字符是过滤器filter的参数，一旦添加该参数后，将在整个数据
  的属性中查找匹配项，找到后则显示，否则不显示，字符内容必须加引号
  例：
    {{ data | filter:80 }}
  表示在data数据的各个属性中，查找包含“80”内容的记录

* 在字符参数中使用对象形式匹配指定属性的数据
  若在过滤数据时已经明确了数据匹配的属性范围，也可以在字符参数中通过对象的形式
  指定匹配的属性名称
  {{ 数据 | filter: 对象 }}
  上述格式中，过滤器参数是一个对象，通过key/value方式声明属性名称和匹配的字符内容，
  若属性名为“$”，则表示在全部属性中查找
  使用对象查找需要注意，对象中的key只允许是第一层的值，
  如：score: 80可以查到，但是data.score: 80是不能查找到的
  例：
    {{ data | filter: {score : 80} }}和{{ data | $: {score: 80} }}
  上述代码中，前者仅在score属性列种匹配值为80的记录，后者则是在全部属性列种匹配数据记录
  后者如同 {{ data | filter: 80 }}

* 在字符参数中使用自定义函数匹配相应数据
  在filter过滤器的字符参数中，除使用对象外，还可以直接调用自定义的函数名，处理相对复杂的
  数据匹配情况
  {{ 数据 | filter: 函数名称 }}
  上述格式中，过滤器的参数为函数名称，即自定义的匹配数据的函数名