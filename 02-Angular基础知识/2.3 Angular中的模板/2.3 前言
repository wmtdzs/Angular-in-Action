Angular自身提供了一套完整的模板系统

配合$scope对象和双向绑定机制，将页面纯静态元素经过行为、属性的添加和格式转换，
最终变成在浏览器中显示的动态页面

在模板系统中，可以包含Angular指令、数据绑定、表单控件和过滤器，同时，在处理复杂程序时，
可以构建多个模板页面作用于视图层，在主页中，再通过包含(include)的方式加载这些零散的模板页。
这样做的好处在于，一次定义多处调用，增加代码的重复使用，减少维护成本